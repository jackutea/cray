cmake_minimum_required(VERSION 3.10)

set(RAYLIB_DLL_DIR "C:\\dev\\vcpkg\\packages\\raylib_x64-windows\\bin")

# Set the project name
project(CRay)

# find_package(raylib REQUIRED)

file(GLOB SRC_FILES
    "${PROJECT_SOURCE_DIR}/src/*.h"
    "${PROJECT_SOURCE_DIR}/src/*.c"
    "${PROJECT_SOURCE_DIR}/src/Input/*.h"
    "${PROJECT_SOURCE_DIR}/src/Input/*.c"
    "${PROJECT_SOURCE_DIR}/src/Camera/*.h"
    "${PROJECT_SOURCE_DIR}/src/Camera/*.c"
    "${PROJECT_SOURCE_DIR}/src/Entities/*.h"
    "${PROJECT_SOURCE_DIR}/src/Entities/*.c"
    "${PROJECT_SOURCE_DIR}/src/Math/*.h"
    "${PROJECT_SOURCE_DIR}/src/Math/*.c"
    "${PROJECT_SOURCE_DIR}/src/Datastructure/*.h"
    "${PROJECT_SOURCE_DIR}/src/Datastructure/*.c"
    "${PROJECT_SOURCE_DIR}/src/Datastructure/Hashmap/*.c"
    "${PROJECT_SOURCE_DIR}/src/Datastructure/Hashmap/*.h"
)

# Add an executable
add_executable(${CMAKE_PROJECT_NAME} ${SRC_FILES})

file(GLOB TEST_FILES
    "${PROJECT_SOURCE_DIR}/test/*.h"
    "${PROJECT_SOURCE_DIR}/test/*.c"
)

# tests
add_test(${CMAKE_PROJECT_NAME} TEST_FILES)

# Include stdlib.h

target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE raylib)

target_compile_features(${CMAKE_PROJECT_NAME} PRIVATE c_std_99)

add_custom_command(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
        ${RAYLIB_DLL_DIR}/raylib.dll
        $<TARGET_FILE_DIR:${CMAKE_PROJECT_NAME}>)

# Copy resources to build directory
# file(COPY ${PROJECT_SOURCE_DIR}/Assets DESTINATION ${CMAKE_BINARY_DIR})